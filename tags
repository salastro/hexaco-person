!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/salastro/.srckpkgs/hexaco-person/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
ask	question.py	/^def ask(questions: dict):$/;"	f
ax	plot.py	/^fig, ax = plt.subplots(2, 3)$/;"	v
color	plot.py	/^    color = hexaco[key]['color']$/;"	v
data	panda.py	/^data = pd.read_csv($/;"	v
data	plot.py	/^data = pd.read_csv($/;"	v
df	panda.py	/^df = pd.DataFrame(data, index= [0])$/;"	v
domain	plot.py	/^    domain = hexaco[key]['domain']$/;"	v
domains_questions	model.py	/^domains_questions = {$/;"	v
domains_scores	question.py	/^def domains_scores(domains_questions: dict, answers: dict):$/;"	f
fig	plot.py	/^fig, ax = plt.subplots(2, 3)$/;"	v
filename	plot.py	/^filename = input("CSV file: ")$/;"	v
hexaco	plot.py	/^hexaco = {$/;"	v
i	plot.py	/^i = 0$/;"	v
j	plot.py	/^        j = 0$/;"	v
j	plot.py	/^j = 0$/;"	v
main	question.py	/^def main():$/;"	f
mean	plot.py	/^    mean = hexaco[key]['mean']$/;"	v
message	model.py	/^message = """*HEXACO-PI-R 100*\\n\\nb = back, 1 = strongly disagree, 2 = disagree, 3 = neutral, /;"	v
np	plot.py	/^import numpy as np$/;"	I	nameref:module:numpy
pd	panda.py	/^import pandas as pd$/;"	I	nameref:module:pandas
pd	plot.py	/^import pandas as pd$/;"	I	nameref:module:pandas
pd	question.py	/^import pandas as pd$/;"	I	nameref:module:pandas
plt	plot.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
questions	model.py	/^questions = {$/;"	v
reversal	model.py	/^reversal = [ 1, 6, 9, 10, 12, 13, 15, 16, 19, 20, 21, 25, 29, 35, 36, 38, 41,$/;"	v
reverse	question.py	/^def reverse(reversal: list, answers: dict):$/;"	f
save_as_csv	question.py	/^def save_as_csv(scores: dict, filename: str):$/;"	f
score	plot.py	/^    score = data[key]$/;"	v
score_range	plot.py	/^score_range = np.arange(1, 5, 0.01)$/;"	v
stdev	plot.py	/^    stdev = hexaco[key]['stdev']$/;"	v
